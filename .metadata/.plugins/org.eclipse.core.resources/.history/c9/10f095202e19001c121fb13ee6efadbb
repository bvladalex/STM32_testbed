#include "state_machine.h"

static int start_state(void) 
{
	printf("This is the function that is called at power up\n");
	sleep(2);
	return ok;
}

static int vol_state(void)
{
	//print string "volume" and on second row value as accoridn to vol variable
	printf("This is the function called when entering volume mode\n");
	sleep(2);
	return ok;
}

static int bal_state(void)
{
	//print string "balance" and on second row value as accoridn to bal variable
	printf("This is the function called when entering balance mode\n");
	sleep(2);
	return ok;
}

static int fan_state(void)
{
	//print string "fan speed" and on second row value as accoridn to fan variable
	printf("This is the function called when entering fan mode\n");
	sleep(2);
	return ok;
}

/* array and enum below must be in sync! */
int (*state[])(void) = { start_state, vol_state, bal_state, fan_state};



static enum state_codes lookup_transitions(enum state_codes current, enum ret_codes ret)
{
	int i = 0;
	enum state_codes temp = fan;
	for (i = 0;; ++i) {
	  if (state_transitions[i].src_state == current && state_transitions[i].ret_code == ret) {
		temp = state_transitions[i].dst_state;
		break;
	  }
	}
	return temp;
}
